data = "5571.810 1137.440, 5571.810 1137.440, 5571.450 1208.730, 5571.450 1208.730, 5571.450 1208.730, 7538.500 1210.500, 7538.500 1210.500, 7538.500 1210.500, 7637.940 1219.560, 7637.940 1219.560, 7637.940 1219.560, 7625.870 1165.300, 7625.870 1165.300, 7625.870 1165.300, 7255.050 1165.480, 7255.050 1165.480, 7255.050 1165.480, 7255.000 1158.450, 7255.000 1158.450, 7255.000 1158.450, 7657.060 1158.190, 7657.000 1158.190, 7656.940 1158.190, 7648.560 1127.000, 7648.560 1127.000, 7648.560 1127.000, 7587.090 456.730, 7587.090 456.730, 7587.090 456.730, 7332.500 456.620, 7332.380 456.620, 7332.250 456.620, 7332.000 448.750, 7332.000 448.750, 7332.000 448.750, 7586.270 449.640, 7586.270 449.640, 7586.270 449.640, 7584.820 394.270, 7584.820 394.270, 7584.820 394.270, 7619.180 370.090, 7619.180 370.090, 7619.180 370.090, 7619.820 330.090, 7619.820 330.090, 7619.820 330.090, 7635.910 320.090, 7635.910 320.090, 7635.910 320.090, 7636.180 311.910, 7636.090 311.910, 7636.000 311.910, 7581.450 304.820, 7581.450 304.820, 7581.450 304.820, 7566.500 50.690, 7566.500 50.690, 7566.500 50.690, 7239.000 50.640, 7239.000 50.640, 7239.000 50.640, 6935.090 289.820, 6935.090 289.820, 6935.090 289.820, 6758.250 288.750, 6758.250 288.750, 6758.250 288.750, 6592.750 311.250, 6592.750 311.250, 6592.750 311.250, 6573.360 326.640, 6573.360 326.820, 6573.360 327.000, 6573.640 344.550, 6573.730 344.550, 6573.820 344.550, 6591.820 359.270, 6591.910 359.270, 6592.000 359.270, 6698.000 377.000, 6698.000 377.000, 6698.000 377.000, 6721.450 389.640, 6721.450 389.640, 6721.450 389.640, 6732.550 405.640, 6732.550 405.640, 6732.550 405.640, 6735.450 425.090, 6735.450 425.090, 6735.450 425.090, 6731.250 442.380, 6731.250 442.380, 6731.250 442.380, 6722.360 454.090, 6722.360 454.090, 6722.360 454.090, 6685.820 486.360, 6685.820 486.360, 6685.820 486.360, 5977.450 1041.820, 5977.450 1041.820, 5977.450 1041.820, 5961.270 1053.820, 5961.270 1053.820, 5961.270 1053.820, 5914.910 1077.820, 5914.910 1077.820, 5914.910 1077.820, 5852.730 1103.820, 5852.730 1103.820, 5852.730 1103.820, 5793.820 1121.820, 5793.820 1121.820, 5793.820 1121.820, 5744.360 1131.270, 5744.360 1131.270, 5744.360 1131.270, 5666.270 1137.000, 5666.270 1137.000, 5666.270 1137.000, 5571.810 1137.440, 5571.810 1137.440"

# Assuming the data is already in the variable 'data'
coordinates = [tuple(map(float, pair.split())) for pair in data.split(',')]

# Offset the coordinates so the first one is at (0, 0)
first_x, first_y = coordinates[0]
offset_coordinates = [(x - first_x, y - first_y) for x, y in coordinates]

# Apply scale factor
scale_factor = 0.003  # Example scale factor
scaled_coordinates = [(round(x * scale_factor, 4), round(y * scale_factor, 4)) for x, y in offset_coordinates]

# Remove duplicates by value, keeping order
seen = set()
unique_coordinates = []
for coord in scaled_coordinates:
    if coord not in seen:
        unique_coordinates.append(coord)
        seen.add(coord)

# Displaying the result
for coord in unique_coordinates:
    print(coord)

